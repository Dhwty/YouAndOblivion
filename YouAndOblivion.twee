:: StoryTitle
You and Oblivion


:: StoryData
{
	"ifid": "B1E46906-738D-4617-BD15-CEF422C96FD8",
	"format": "SugarCube",
	"format-version": "2.34.1",
	"start": "Start",
	"zoom": 0.6
}


:: Story Stylesheet [stylesheet]
@import url(http://fonts.googleapis.com/css?family=David+Libre:400,700,400italic,700italic);
@import url('https://fonts.googleapis.com/css?family=PT+Sans+Narrow&display=swap');

html {
  height: 100%;
}

body, tw-story
{
  font-family: 'David Libre', serif;
  margin-left: 2em;
  color: #d2d3cd;
  height: 100%;
}

tw-hook
{
  margin-left: -25px;
}

#story {
  height: 100%;
  overflow-y: auto;
  margin-top: 0em;
  margin-bottom: 0em;
}

.passage {
  line-height: 1.25;
  font-size: large;
  margin-left: 1.5em;
}

a {
  color: #b6523a;
  text-decoration: none;
}

a:hover {
  color: white;
  text-decoration: none;
}
a:active {
  color: white;
}

.passage ol {
  margin-left: -1em;
}

.psyche {
  color: #705cbb;
}

.fysique {
  color: #c6496b;
}

.intellect {
  color: #6cc6ce;
}

.motorics {
  color: #e4b934;
}

.speaker {
  text-transform: uppercase;
  margin-left: -1.5em;
}


.dim {
  transition: opacity 0.5s;
  opacity: 0.5;
}

.macro-timed-insert {
	transition-duration: 2s;
}

.pastchoice {
  color: #737c87;
}

.option {
  font-weight: bold;
}

span.continueblock {
  display: none;
}

a.macro-linkreplace {
  background-color: #90280f;
  color: white;
  padding: 15px;
  padding-bottom: 5px;
  padding-top: 10px;
  font-family: 'PT Sans Narrow', sans-serif;
  margin-left: -1.5em;
  display: block;
}


.green {
  color: #98b48b;
  margin-left: -1.5em;
}

.CheckOverlay {
  width: 100%;
  height: 100%;
  background-size: cover;
  position: absolute;
  top: 0px;
  left: 0px;
  pointer-events: none;
  opacity: 0;
  animation-name: Flash;
  animation-duration: 2s;
}

#SuccessImg {
  background: url(SuccessOverlay.png) no-repeat center;
}

#FailureImg {
  background: url(FailureOverlay.png) no-repeat center;
}

@keyframes Flash {
  0%  {opacity: 0}
  20% {opacity: 1}
  50% {opacity: 1}
  100% {opacity: 0}
}

.CheckText {
  color: white;
  font-family: 'PT Sans Narrow', sans-serif;
  position: absolute;
  bottom: 25%;
  left: 50%;
  opacity: 0;
  padding: 0.5em;
  padding-left: 1.5em;
  padding-right: 1.5em;
  animation-name: SlideAndFade;
  animation-duration: 2.5s;
  animation-delay: 1s;
}

#CheckSuccess {
  background-color: #40ce68;
  box-shadow: 0em 0em 0.2em 0.3em #40ce68;
}

#CheckFailure {
  background-color: #90280f;
  box-shadow: 0em 0em 0.2em 0.3em #90280f;
}

@keyframes SlideAndFade {
  0% {opacity: 0.75; left: 45%}
  10% {opacity: 1; left: 50%}
  60% {opacity: 1; left: 50%}
  100% {opacity: 0; left: 80%}
}


:: Story JavaScript [script]
$(document).click(function(e) {
	if($("span.continueblock").length) {
		$("span.continueblock").first().removeClass('continueblock');
	}
	e.stopPropagation();
	return false;
});

postdisplay['paragraph'] = function (taskName) {
	//$('.paragraph').hide().fadeIn(10000);
};

$(document).on("keyup", function (e) {
  if ((e.keyCode == 32) && ($("#ContinueBtn"))) {
    $("#ContinueBtn").click();
  }

  if ((e.keyCode >= 49 && e.keyCode <= 57) && (document.getElementById("OptionList"))) {
    var list = document.getElementById("OptionList");
    var childIndex = e.keyCode - 49; // 0 for '1', 1 for '2', etc
    if (list.children[childIndex]) {
      list.children[childIndex].getElementsByClassName("link-internal")[0].click();
    }
  }
});

window.rollDice = function() {
	var total = random(1,6) + random(1,6);
	return total;
};

:: StoryInit {"position":"268,25","size":"100,100"}
<<set $optionmap to new Map()>>
<<set $greentext to []>>
<<set $paraAppendMode to false>>
<<set $motorics to ["composure", "hand/eye coordination", "interfacing", "reaction speed", "savoir faire", "perception", "perception (smell)", "perception (sight)", "perception (taste)", "perception (touch)", "perception (hearing)"]>>
<<set $intellect to ["conceptualization", "drama", "encyclopedia", "logic", "rhetoric", "visual calculus"]>>
<<set $fysique to ["electrochemistry", "endurance", "half light", "pain threshold", "physical instrument", "shivers"]>>
<<set $psyche to ["authority", "empathy", "esprit de corps", "inland empire", "suggestion", "volition"]>>
/*Basic Bitch Harry*/
<<set $INT to 3>>
<<set $PSY to 3>>
<<set $FYS to 3>>
<<set $MOT to 3>>
/*Clues*/
<<set $gotPrybar to 0>>
/*Visited Locations*/
<<set $visCrimeScene to 0>>
<<set $seenAlley to 0>>
/*Reputation*/
<<set $Kimfluence to 0>>
<<set $StationRep to 0>>


:: PassageHeader {"position":"407,27","size":"100,100"}
<<set $paragraphs to []>>
<<if $lastoption>>
@@.speaker.pastchoice;You@@ @@.pastchoice;- $lastoption@@

<</if>>


:: PassageFooter {"position":"547,28","size":"100,100"}
<<DisplayParagraphs>>\


:: DisplayOptions [nobr] {"position":"546,144","size":"100,100"}
<ol id="OptionList">
<<for _optiontext, _optionpassage range $optionmap>>
  <<capture _optionpassage, _optiontext>>
    <li>
      <<link _optiontext _optionpassage>><<set $lastoption to _optiontext>><</link>>
    </li>
  <</capture>>
<</for>>
</ol>
<<set $optionmap to new Map()>>


:: SkillSuccess [Widget widget] {"position":"600,100","size":"100,100"}
<<nobr>>
<<widget "SkillSuccess">>
<div id="SuccessImg" class="CheckOverlay"></div>
<div id="CheckSuccess" class="CheckText">CHECK SUCCESS</div>
<<SetSpeaker "">>
<<AddParagraph "//Green flashes at the edges of your vision - a success.//">>
<</widget>>
<</nobr>>


:: SkillFailure [Widget widget] {"position":"725,100","size":"100,100"}
<<nobr>>
<<widget "SkillFailure">>
<div id="FailureImg" class="CheckOverlay"></div>
<div id="CheckFailure" class="CheckText">CHECK FAILURE</div>
<<SetSpeaker "">>
<<AddParagraph "//Red flashes at the edges of your vision - a failure.//">>
<</widget>>
<</nobr>>


:: PassiveSkill [Widget widget] {"position":"403,146","size":"100,100"}
<<nobr>>
<<widget "PassiveSkill">>
<<set _skillname to ($args[0].toLowerCase())>>
<<set _skillresult to "">>
<<if $args[1]>>
<<set _skillresult to ("[" + $args[1] + ": " + $args[2] + "]")>>
<</if>>
<<if $motorics.includes(_skillname)>>
<<set $currentspeaker to ("@@.motorics.speaker;" +
_skillname +
"@@")>>
<<elseif $intellect.includes(_skillname)>>
<<set $currentspeaker to ("@@.intellect.speaker;" +
_skillname +
"@@")>>
<<elseif $fysique.includes(_skillname)>>
<<set $currentspeaker to ("@@.fysique.speaker;" +
_skillname +
"@@")>>
<<elseif $psyche.includes(_skillname)>>
<<set $currentspeaker to ("@@.psyche.speaker;" +
_skillname +
"@@")>>
<</if>>
<<if _skillresult>>
<<set $currentspeaker += _skillresult>>
<</if>>
<<set $currentspeaker += " - ">>
<</widget>>
<</nobr>>


:: Speaker [widget] {"position":"272,152","size":"100,100"}
<<nobr>>
<<widget "speaker">>
@@.speaker;
$args[0] -
@@
<</widget>>
<</nobr>>


:: AddOption [widget] {"position":"273,265","size":"100,100"}
\<<widget "AddOption">>\<<run $optionmap.set($args[0], $args[1])>>\<</widget>>\


:: DisplayParagraphs [widget] {"position":"401,262","size":"100,100"}
<<widget "DisplayParagraphs">><<set _paragraph to $paragraphs[0]>>\
<<run $paragraphs.deleteAt(0)>>\
<span class="paragraph"><<print _paragraph>></span>
<<if $paragraphs.length > 0>>
<<linkreplace "@@#ContinueBtn;CONTINUE âž¤@@" t8n>><<DisplayParagraphs>><</linkreplace>>\
<<else>>\
<<include DisplayOptions>>
<</if>>
<<timed 0.5s>><<script>>
var paragraphs = document.getElementsByClassName('paragraph');
if (paragraphs.length > 1) {
	paragraphs[paragraphs.length-2].classList.add("dim");
}
<</script>><</timed>>\
<</widget>>


:: SetSpeaker [widget] {"position":"674,151","size":"100,100"}
<<widget "SetSpeaker">><<set $currentspeaker to ("@@.speaker;" + $args[0] + "@@ - ")>><</widget>>


:: BlankSpeaker [widget] {"position":"1225,100","size":"100,100"}
<<widget "BlankSpeaker">><<set $currentspeaker to "">><</widget>>


:: AddParagraph [widget] {"position":"546,268","size":"100,100"}
<<nobr>>
<<widget "AddParagraph">>
<<set _para to "">>
<<if $paraAppendMode is true>>
<<for _text range $greentext>>
<<set _para to (_para + _text + "<br /><br />")>>
<</for>>
<<set $greentext to []>>
<<set $paraAppendMode to false>>
<</if>>
<<set _para to (_para + $currentspeaker + $args[0])>>
<<run $paragraphs.push(_para)>>
<</widget>>
<</nobr>>


:: StoryAuthor {"position":"268,439","size":"100,100"}
Original story by The Kirkwall Gazette Collective
Twine framework by Pikalex88


:: StorySubtitle {"position":"392,432","size":"100,100"}
Be Gay; Solve Crimes
A Disco Elysium Fanwork


:: StoryShare {"position":"526,432","size":"100,100"}
[["@ampepers on Twitter"|https://twitter.com/ampepers]]
[["Repo with the source code"|https://github.com/apepers/DiscoElysiumTwineMacros/]]


:: GreenTextWidgets [widget] {"position":"400,600","size":"100,100"}
<<nobr>>
<<widget "TaskComplete">>
<<run $greentext.push("@@.green;Task complete: " + $args[0] + "@@")>>
<<if $args[1]>>
<<run $greentext.push("@@.green;Gained experience: +" + $args[1] + "@@")>>
<</if>>
<<set $paraAppendMode to true>>
<</widget>>

<<widget "SecretTaskComplete">>
<<run $greentext.push("@@.green;Secret task complete: " + $args[0] + "@@")>>
<<if $args[1]>>
<<run $greentext.push("@@.green;+" + $args[1] + " XP: gained experience@@")>>
<</if>>
<<set $paraAppendMode to true>>
<</widget>>

<<widget "NewTask">>
<<run $greentext.push("@@.green;New task: " + $args[0] + "@@")>>
<<set $paraAppendMode to true>>
<</widget>>

<<widget "ItemGained">>
<<run $greentext.push("@@.green;Item gained: " + $args[0] + "@@")>>
<<set $paraAppendMode to true>>
<</widget>>

<<widget "ItemLost">>
<<run $greentext.push("@@.green;Item lost: " + $args[0] + "@@")>>
<<set $paraAppendMode to true>>
<</widget>>

<<widget "ThoughtGained">>
<<run $greentext.push("@@.green;Thought gained: " + $args[0] + "@@")>>
<<set $paraAppendMode to true>>
<</widget>>

<<widget "LevelUp">>
<<run $greentext.push("@@.green;Level up!@@")>>
<<set $paraAppendMode to true>>
<</widget>>

<</nobr>>


:: Start [nobr] {"position":"1100,50","size":"100,100"}
<<PassiveSkill "Shivers">>
<<AddParagraph "Revachol is cold, today, but the hot breath of Jamrock curls around your ankles as you stand on the street corner. An apartment building towers over you, stretching toward the sky as if it meant to thrust through the sun, itself. Somewhere on the next block, you can hear a baby screaming, wordless and confused, a familiar sensation. You can hear the wind scrape across Lt. Kitsuragi's aerostatic jacket, beside you, and the batting wings of a gull lifting off from the bins beside the building.">>

<<SetSpeaker "You">>
<<AddParagraph "\"So, how do you know there's a murder? I didn't hear that in the call.\" You study Kim's face in the hazy light that radiates from above the door. He looks tense.">>

<<SetSpeaker "Kim Kitsuragi">>
<<AddParagraph "\"The noise complaint is hours old. There's no noise, now. It's ... I have a bad feeling about this one.\"">>

<<AddOption "[Perception - Easy 8] \"Have you been smoking, this early?\"" SmokeCheck>>[[|SmokeCheck]]
<<AddOption "Go inside" 3FHall>>[[|3FHall]]


:: SmokeCheck {"position":"1100,200","size":"100,100"}
<<set _roll to rollDice() + $MOT>>
You got: _roll
<<if _roll >= 8>>
    <<SkillSuccess>>
    <<PassiveSkill Perception>>
    <<AddParagraph "He has definitely been smoking, and from the smell wafting off his jacket, it's more than just one.">>

    <<PassiveSkill Empathy>>
    <<AddParagraph "He's freaked out enough about something that he's smoking in the *morning*. This isn't the old Kitsuragi one-smoke-before-bed.">>
<<else>>
    <<SkillFailure>>
    <<PassiveSkill Perception>>
    <<AddParagraph "No, it's gone now. It's probably just the smell of last night's clinging to his jacket.">>
<</if>>
<<SetSpeaker "Kim Kitsuragi">>
<<AddParagraph "\"Don't we have work to do?\" He gestures toward the building.">>
<<AddOption "Go inside" 3FHall>>[[|3FHall]]

:: 3FHall
<<SetSpeaker "West Jamrock Apartments">>
<<AddParagraph "The linoleum on the floor is peeling, and the subflooring creaks with every step. It's still better than your place. One door is slightly ajar. The doors to the right and left of it are closed, as is the door across the hall.">>
<<AddOption "Examine crime scene" CrimeScene>>[[|CrimeScene]]

:: CrimeScene
<<if $visCrimeScene < 1>>
<<SetSpeaker "Dirty One-Bedroom Apartment">>
<<AddParagraph "The door is half-open, held in place by the crumpled body of a man fallen across its path. He's barefoot, half a chicken-skinny calf sticking out of a pair of mustard-coloured bellbottom jeans you think you recognise. You're pretty sure you own a pair like that, and probably in about his size, to judge by the bulging waist that is as far as you can see before entering the room.">>
<<AddParagraph "Picking your way carefully over the relatively fresh corpse, you come into a room where the light is still on from the night before. A cloth print of Guillaume de Million hangs over the one window at the far end of the room, next to the semi-kitchen bent into the corner. The carpet is a filthy grey that probably dates to the Revolution, and a pool of blood has soaked into it around the corpse's head, and a prybar dented the carpet, while it was still wet, and is now likely adhered to it with partially-dried blood. Whoever the corpse was, half his face is crushed in a way that's going to make identification difficult, if he's not the resident. He had, in life, an excellent set of sideburns with connecting moustache, though, that rather remind you of the way you used to wear your facial hair.">>

<<PassiveSkill "Inland Empire">>
<<AddParagraph "You've recovered, since then. At least some. At least you like to think you have.">>

<<SetSpeaker "Dirty One-Bedroom Apartment">>
 <<AddParagraph "The man is shirtless, and the massive coat of hair covering his chest like a rug is spotted with crusted mats of red and white. The smell in the room is fresher and far more vile than any left behind by the gathering of that white crust, and you notice the yellow-brown stain in the carpet that has absolutely ruined those jeans. Though, they are mustard. It might fade enough to be unnoticeable, but they'd still be a dead man's pants.">>
 <<set $visCrimeScene to 1>>
 <<else>>
 <<SetSpeaker "Dirty One-Bedroom Apartment">>
 <<AddParagraph "The room is still dingy, and the body remains on the floor. The smell is unpleasant, but you've woken up smelling like that, in worse places than this.">>
 <</if>>
<<AddParagraph "The bedroom is to your right, and what you can see in the light leaking from the living room suggests it's been trashed. The bathroom, a dingy and unwashed yellow on what probably used to be white, is in the same direction.">>
<<AddOption "[Perception - Medium 10] Examine prybar" ExaminePrybar>>[[|ExaminePrybar]]
<<AddOption "Look out window" AptWindow>>[[|AptWindow]]
<<AddOption "Examine bathroom" ExamineBathroom>>[[|ExamineBathroom]]
<<AddOption "Return to hall" 3FHall>>

::ExaminePrybar
<<ItemGained "Red-Handled Prybar">>
<<set _roll to rollDice() + $MOT>>
You got: _roll
<<if _roll >= 10>>
    <<SkillSuccess>>
    <<PassiveSkill Perception>>
    <<AddParagraph "You know this prybar. You've used this prybar -- not just this brand, or this style, but this one, right here. You tried to open a door with it that's probably never going to open again, and right here at the end, where it thins so you can get it in, it's still a little bent. This is Kim's prybar.">>

<<PassiveSkill "Half Light">>
<<AddParagraph  "And now it's wet with another man's blood.">>
<<else>>
    <<SkillFailure>>
    <<PassiveSkill Perception>>
    <<AddParagraph  "It's definitely an RCM-issue prybar. You can see the property number branded into the rubber of the handle. In fact, it reminds you of the one you borrowed from Kim, back in Martinaise, on your first case together.">>
<</if>>
<<AddOption "Look at something else" CrimeScene>>[[|CrimeScene]]

::AptWindow
<<set $seenAlley to 1>>
<<PassiveSkill Perception>>
<<AddParagraph  "Behind the hanging, there's a window that looks like it hasn't been washed since the Revolution, and it looks down on an alley that almost looks cleaner than the apartment you're standing in. You spot two ginger-haired people digging through an unlocked skip.">>

<<PassiveSkill Logic>>
<<AddParagraph "This apartment may not be representative of the state of the rest of the building, given that the alley looks like it's sprayed down fairly regularly. The floor in the hall is old and peeling, but it is clean. This place looks like it hasn't been cleaned since before the tenant moved in, at least.">>

<<PassiveSkill Perception>>
<<AddParagraph "As you turn away from the window, you notice a smear on the glass that looks as if something twice rounded was pressed against the glass, clearing some of the grime. You wonder, for a moment, if the tenant was mooning someone in the next building, but something bothers you about the angle.">>
/*Add Kim's ass checks*/
<<AddOption "Look at something else" CrimeScene>>[[|CrimeScene]]

::ExamineBathroom
<<PassiveSkill Perception>>
<<AddParagraph "You don't really want to search this. It's worse than your bathroom. You're pretty sure you at least bleached the sink, last month. This place has a filthy yellow film on every surface in it. A wet towel is wadded up under the bar it should be hung on. A crusty strand of large beads lies in the sink. The mirror is so blurry, your face looks like pastel paints thrown at the wall. The toilet seat is up and the bowl is brown with yellow water.">>
<<AddOption "Look at something else" CrimeScene>>[[|CrimeScene]]
